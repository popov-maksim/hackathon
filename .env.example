# Rename to .env and edit values
POSTGRES_USER=your_pg_user
POSTGRES_PASSWORD=your_pg_password
POSTGRES_DB=your_pg_database
POSTGRES_HOST=your_pg_host
POSTGRES_PORT=6432

# API
API_HOST=0.0.0.0
API_PORT=8000

# BOT
BOT_TOKEN=PUT_TELEGRAM_BOT_TOKEN_HERE
API_BASE_URL=http://api:8000

# Request limits
REQUEST_CONNECT_TIMEOUT=2.0
REQUEST_READ_TIMEOUT=3.0
RATE_LIMIT_SECONDS=1.0
RUN_TIME_LIMIT_SECONDS=1200  # 20 minutes

DATASETS_DIR=/data/datasets

# Cloud Functions worker settings
# Max number of parallel HTTP calls inside one predict-worker invocation
WORKER_MAX_CONCURRENCY=10

# Yandex Message Queue (SQS-compatible)
YMQ_ENDPOINT_URL=https://message-queue.api.cloud.yandex.net
YMQ_REGION=ru-central1
# Full Queue URL, e.g. https://message-queue.api.cloud.yandex.net/ru-central1/b1.../d.../queue
YMQ_QUEUE_URL=
YMQ_QUEUE_ARN=
# Optional static keys (prefer SA/IAM when running in YC)
YMQ_ACCESS_KEY=
YMQ_SECRET_KEY=
YMQ_SESSION_TOKEN=

# Offline CSV scoring via public Cloud Function
OFFLINE_CF_URL=

# S3 / Object Storage for datasets and offline predictions
S3_ENDPOINT_URL=https://storage.yandexcloud.net
S3_REGION=ru-central1
S3_OFFLINE_BUCKET=x5-hackathon-bucket
S3_DATASETS_PREFIX=datasets/
S3_RUNS_CSV_PREFIX=runs_csv/

# for s3 credentials
ACCESS_KEY=
SECRET_KEY=
